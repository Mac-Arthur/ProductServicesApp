@page "/countries/create"
@using Microsoft.EntityFrameworkCore
@using ProductServicesApp.Models;
@using ProductServicesApp.Models.Entities
@inject IDbContextFactory<ProductServicesApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>



<h4>Enter Country Details</h4>
<hr />
<div class="row mt-5">
    <div class="col-md-4">
        <EditForm method="post" Model="Country" OnValidSubmit="AddCountry" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Country.Name" class="form-control" /> 
                <ValidationMessage For="() => Country.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="shortcode" class="form-label">ShortCode:</label> 
                <InputText id="shortcode" @bind-Value="Country.ShortCode" class="form-control" /> 
                <ValidationMessage For="() => Country.ShortCode" class="text-danger" /> 
            </div>   
            <div class="mt-4">
                <button type="submit" class="btn btn-sm btn-primary">Create</button>
                <a class="btn btn-sm btn-dark ms-2" href="/countries">Back to List </a>
            </div>
            
        </EditForm>

    </div>
</div>

<div>
</div>

@code {
    [SupplyParameterFromForm]
    private Country Country { get; set; } = new();


    private async Task AddCountry()
    {
        using var context = DbFactory.CreateDbContext();
        context.Country.Add(Country);
        Country.DateCreated = DateTime.Now;
        Country.DateUpdated = DateTime.Now;
        Country.IsActive = true;
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/countries");
    }
}

           