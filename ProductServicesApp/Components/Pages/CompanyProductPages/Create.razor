@page "/companyproducts/create"
@using Microsoft.EntityFrameworkCore
@using ProductServicesApp.Models
@inject IDbContextFactory<ProductServicesApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>CompanyProduct</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="CompanyProduct" OnValidSubmit="AddCompanyProduct" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="productid" class="form-label">ProductId:</label> 
                <InputNumber id="productid" @bind-Value="CompanyProduct.ProductId" class="form-control" /> 
                <ValidationMessage For="() => CompanyProduct.ProductId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="companyid" class="form-label">CompanyId:</label> 
                <InputNumber id="companyid" @bind-Value="CompanyProduct.CompanyId" class="form-control" /> 
                <ValidationMessage For="() => CompanyProduct.CompanyId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isexporter" class="form-label">IsExporter:</label> 
                <InputCheckbox id="isexporter" @bind-Value="CompanyProduct.IsExporter" class="form-check-input" /> 
                <ValidationMessage For="() => CompanyProduct.IsExporter" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isimporter" class="form-label">IsImporter:</label> 
                <InputCheckbox id="isimporter" @bind-Value="CompanyProduct.IsImporter" class="form-check-input" /> 
                <ValidationMessage For="() => CompanyProduct.IsImporter" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/companyproducts">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private CompanyProduct CompanyProduct { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddCompanyProduct()
    {
        using var context = DbFactory.CreateDbContext();
        context.CompanyProduct.Add(CompanyProduct);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/companyproducts");
    }
}
