@page "/companyproducts"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using ProductServicesApp.Models
@using ProductServicesApp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<ProductServicesApp.Data.ApplicationDbContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="companyproducts/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.CompanyProduct">
    <PropertyColumn Property="companyproduct => companyproduct.ProductId" />
    <PropertyColumn Property="companyproduct => companyproduct.CompanyId" />
    <PropertyColumn Property="companyproduct => companyproduct.IsExporter" />
    <PropertyColumn Property="companyproduct => companyproduct.IsImporter" />

        @* <TemplateColumn Context="companyproduct" Title="ProductName" Sortable="true">
				@companyproduct.Product.Name
			</TemplateColumn>
			<TemplateColumn Context="companyproduct" Title="Company" Align="Align.Center">
				@companyproduct.Company.Name
			</TemplateColumn>
			<TemplateColumn Context="companyproduct" Title="Country" Align="Align.Center">
			 @companyproduct.Company.Country.Name
			</TemplateColumn>
			<TemplateColumn Context="companyproduct" Title="Exporter" Align="Align.Center">

				@if (companyproduct.IsExporter)
				{
					<span><i class="bi bi-check-lg text-success h4"></i></span>
				}
				else
				{
					<span><i class="bi bi-x-lg text-danger h4"></i></span>
				}
			</TemplateColumn>
			<TemplateColumn Context="companyproduct" Title="Importer" Align="Align.Center">
				@if (companyproduct.IsImporter)
				{
					<span><i class="bi bi-check-lg text-success h4"></i></span>
				}
				else
				{
					<span><i class="bi bi-x-lg text-danger h4"></i></span>
				}
			</TemplateColumn> *@
    <TemplateColumn Context="companyproduct">
        <a href="@($"companyproducts/edit?id={companyproduct.Id}")">Edit</a> |
        <a href="@($"companyproducts/details?id={companyproduct.Id}")">Details</a> |
        <a href="@($"companyproducts/delete?id={companyproduct.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;
    string NameFilter = "";

    // IQueryable<GetProductDTO> FilteredProductDTO => GetFilteredProduct(NameFilter);
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    // public IQueryable<GetProductDTO> GetFilteredProduct(string value = "")
    // {

    //     return context.CompanyProduct.Select(c => new GetProductDTO
    //         {
    //             ProductName = c.Product!.Name,
    //             IsExporter = c.IsExporter,
    //             IsImporter = c.IsImporter,
    //             CompanyName = c.Company!.Name,
    //             Country = c.Company!.Country!.Name,
    //             Id = c.Product.Id

    //         }).Where(c => c.ProductName!.ToLower().Contains(value.ToLower()));
    // }

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
